{"version":3,"sources":["webpack:///./src/components/PrintLayout.js","webpack:///./src/pages/resume.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["PRINT_LAYOUT_STYLES","margin","padding","paddingTop","PrintLayout","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","style","href","rel","_3589952589","propTypes","PropTypes","node","isRequired","ResumePage","components_PrintLayout","seo","title","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","object","string","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-resume-js-4f39ae00fd1ad4c8e302.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst PRINT_LAYOUT_STYLES = {\n  margin: `0 auto`,\n  padding: 0,\n  paddingTop: 0,\n}\n\nconst PrintLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query PrintTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div style={PRINT_LAYOUT_STYLES}>\n        <link\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n          rel=\"stylesheet\"\n        />\n        <main>{children}</main>\n      </div>\n    )}\n  />\n)\n\nPrintLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PrintLayout\n","import React from 'react';\nimport PrintLayout from '../components/PrintLayout';\nimport SEO from '../components/seo';\n\nconst HEADER_STYLES = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'center',\n\talignItems: 'center',\n};\n\nconst Header = () => {\n\treturn (\n\t\t<div style={HEADER_STYLES}>\n\t\t\t<h1>Jason Kinnear</h1>\n\t\t</div>\n\t);\n};\n\nconst PageHr = () => {\n\treturn (\n\t\t<hr\n\t\t\tstyle={{\n\t\t\t\theight: '4px',\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst ResumePage = () => (\n\t<PrintLayout>\n\t\t<SEO title=\"Resume\" />\n\t\tsoon\n\t</PrintLayout>\n);\n\nexport default ResumePage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}